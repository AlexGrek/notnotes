apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-frontend
  labels:
    app: {{ .Values.app.name }}-frontend
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}-frontend
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}-frontend
    spec:
      containers:
        - name: react-router-ssr
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"

        - name: nginx-proxy
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d

      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Values.app.name }}-nginx-cm

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.app.name }}-nginx-cm
data:
  default.conf: |
    server {
      listen 80;

      location /api/ {
        proxy_pass http://{{ .Values.app.name }}-service:{{ .Values.service.targetPort }}/;
      }

      location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }
    }
